<div class="max-h-screen">

  <div x-data="pokemonGame" @keypress.window="submitAnswer($event)" class="flex items-center justify-center translate-y-10 transform">
    <div class="grid grid-cols-12 gap-4 mx-10 w-full">
      <div class="col-span-12 flex" style="max-height: 10vh;">
          <i :class="determineOpacity(1)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(2)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(3)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(4)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(5)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(6)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(7)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(8)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(9)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
          <i :class="determineOpacity(10)" class="transform transition-opacity duration-1000"><%= inline_svg_tag 'pokeball', class: 'max-w-full max-h-full' %></i>
      </div>

      <div x-init="fetchNextPokemonQuestion()" id='pokemon-spellcheck-question-wrapper' class="col-span-9 p-6 bg-white border border-gray-300 rounded-lg" style="height: fit-content;">
      </div>
      <div class="col-span-3 border-l-2 border-green-600  shadow p-6">
        <%#= render partial: 'points_progress_bar' %>

                <div class="text-4xl mt-20 mx-auto text-center text-white" style="font-size: 10rem;"> <span x-text="correctlyAnswered"></span> / <span x-text="currentQuestion - 1"></span></div>

        <!--      <div class="h-32 w-32 mx-auto bg-white rounded-full shadow border-8 border-indigo-700 flex items-center justify-center">-->
        <!--        <div class="flex flex-col items-center">-->
        <!--          <p class="text-indigo-700 text-base font-bold"><span x-text="percentCorrect()"></span>% </p>-->
        <!--          <p class="text-gray-600 text-sm"><span x-text="correctlyAnswered"></span> / <span>10</span></p>-->
        <!--        </div>-->
        <!--      </div>-->
      </div>
    </div>
  </div>

</div>

<style>
    body {
        max-height: 100%;
    }

    body.swal2-shown > [aria-hidden="true"] {
        transition: 0.1s filter;
        filter: blur(10px);
    }

    .default {
        opacity: 0.5;
    }

    .correct {
        opacity: 1;
    }

    .incorrect {
        opacity: 0.2;
    }

</style>

<script type="text/javascript" charset="utf-8">
  document.addEventListener('alpine:init', () => {
    Alpine.data('pokemonGame', () => ({
      currentQuestion: 1,
      correctlyAnswered: 0,
      question: {
        problem: '',
        correct: '',
        answers: []
      },
      answerResults: [],
      score: 0,
      submitAnswer(event) {
        if (this.currentQuestion > 10) {
          return
        }
        let correct = false;
        if (event.type === 'click') {
          if (event.currentTarget.textContent.toLowerCase() === this.question.correct.toLowerCase()) {
            correct = true;
          }
        } else if (event.type === 'keypress') {
          if (event.key.toLowerCase() === this.question.correct.toLowerCase()) {
            correct = true
          }
        }

        this.answerResults.push(correct)

        if (correct) {
          this.correctlyAnswered++
          this.currentQuestion++
        } else {
          this.currentQuestion++
        }
        if (this.currentQuestion <= 10) {
          this.fetchNextPokemonQuestion()
        } else {
          this.gameOver()
        }
        this.percentCorrect()
      },
      async fetchNextPokemonQuestion() {
        const response = await fetch('<%= new_question_pokemon_index_path %>')
        const data = await response.json()
        this.question = data.question
        document.getElementById('pokemon-spellcheck-question-wrapper').innerHTML = data.partial

      },
      percentCorrect() {
        this.score = Math.round((this.correctlyAnswered / 10) * 100)
        return this.score
      },
      gameOver() {

        swal.fire({
          title: `Game Over! <br> ${this.correctlyAnswered} out of 10`,
          text: "Play again? ",
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, play again!',
          reverseButtons: true,
          cancelButtonText: 'No thanks!',
          allowOutsideClick: false,
          stopKeydownPropagation: false,
        }).then((result) => {
          if (result.isConfirmed) {
            window.location = '<%= game_new_pokemon_round_path %>'
          } else {
            window.location = '<%= games_path %>'
          }
        })
      },
      determineOpacity(questionNumber){
        if (this.currentQuestion === questionNumber){
          return 'animate-pulse'
        } else if (this.currentQuestion < questionNumber){
          return 'default'
        } else if (this.answerResults[questionNumber -1]){
          return 'correct'
        } else {
          return 'incorrect'
        }
      }
    }))
  })
</script>